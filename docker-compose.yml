version: '3.8'

services:
  db:
    image: postgres:15
    container_name: job_postings
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-sozjavbxj}
      - POSTGRES_DB=job_postings
    command: ["postgres", "-c", "listen_addresses=*"]
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - scraper_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=debug
      - LOG_HTML=true
      - TZ=Europe/London
      - HOST=flaresolverr
    ports:
      - "8191:8191"
    networks:
      scraper_network:
        aliases:
          - flaresolverr
    healthcheck:
      test: ["CMD", "curl", "-X", "POST", "-H", "Content-Type: application/json", "-d", '{"cmd": "sessions.list"}', "http://localhost:8191/v1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job_scraper
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-sozjavbxj}
      - DB_NAME=job_postings
      - FLARESOLVERR_URL=http://flaresolverr:8191/v1
      - PYTHONUNBUFFERED=1
    networks:
      - scraper_network
    depends_on:
      db:
        condition: service_healthy
      flaresolverr:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./data:/app/data
      - ./error_screenshots:/app/error_screenshots
    dns:
      - 8.8.8.8
      - 8.8.4.4

networks:
  scraper_network:
    name: scraper_network
    driver: bridge

volumes:
  pgdata: