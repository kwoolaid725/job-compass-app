name: Job Scraper Cron

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

env:
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  scrape-jobs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_category: [data_engineer, python_developer, data_scientist]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Create directories
      run: |
        mkdir -p data
        mkdir -p error_screenshots
        chmod 777 data error_screenshots

    - name: Start services
      run: |
        docker-compose pull
        docker-compose up -d db flaresolverr
        echo "Waiting for services to start..."
        sleep 30  # Give services time to initialize

    - name: Check service logs and status
      run: |
        echo "Docker Compose Status:"
        docker-compose ps
        echo "FlareSolverr Logs:"
        docker-compose logs flaresolverr
        echo "Database Logs:"
        docker-compose logs db

    - name: Test FlareSolverr endpoint
      run: |
        echo "Testing FlareSolverr endpoint..."
        curl -X POST \
          -H "Content-Type: application/json" \
          -d '{"cmd": "sessions.list"}' \
          http://localhost:8191/v1
        
        echo "Waiting additional time for FlareSolverr to fully initialize..."
        sleep 30

        echo "Testing FlareSolverr with a test request..."
        curl -X POST \
          -H "Content-Type: application/json" \
          -d '{
            "cmd": "request.get",
            "url": "https://www.google.com",
            "maxTimeout": 60000
          }' \
          http://localhost:8191/v1

    - name: Test network connectivity
      run: |
        echo "Testing network setup..."
        docker network inspect scraper_network
        
        echo "Testing DNS resolution..."
        docker-compose run --rm scraper ping -c 1 flaresolverr
        
        echo "Testing FlareSolverr connection..."
        docker-compose run --rm scraper curl -v http://flaresolverr:8191/v1
        
        echo "Testing FlareSolverr API..."
        docker-compose run --rm scraper curl -X POST \
          -H "Content-Type: application/json" \
          -d '{"cmd": "sessions.list"}' \
          http://flaresolverr:8191/v1
          
        echo "Container IPs:"
        docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker-compose ps -q)

    - name: Run scraper
      run: |
        echo "Starting scraper..."
        docker-compose run --rm scraper python -m app.scrapers.scraper_main \
          --source indeed \
          --category ${{ matrix.job_category }}

    - name: Upload error screenshots
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: error-screenshots-${{ matrix.job_category }}
        path: error_screenshots/
        if-no-files-found: ignore

    - name: Upload scraped data
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: scraped-data-${{ matrix.job_category }}
        path: data/
        if-no-files-found: warn

    - name: Cleanup
      if: always()
      run: |
        echo "Final service status:"
        docker-compose ps
        echo "Final FlareSolverr logs:"
        docker-compose logs flaresolverr
        docker-compose down -v
        docker system prune -f